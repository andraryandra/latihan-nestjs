var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.283,1,2.053]],["body/controllers/AppController.html",[0,2.039,1,3.262,2,1.623,3,0.388,4,0.336,5,0.336,6,3.364,7,0.621,8,1.726,9,4.844,10,1.623,11,0.032,12,0.904,13,4.03,14,1.374,15,1.875,16,0.627,17,0.827,18,2.908,19,3.364,20,0.388,21,0.019,22,2.336,23,3.364,24,1.493,25,4.03,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1.086,29,2.053]],["body/modules/AppModule.html",[1,3.049,2,1.654,3,0.283,4,0.245,5,0.245,11,0.032,16,0.735,17,0.603,18,2.932,19,2.454,20,0.283,21,0.014,26,0.02,27,0.02,28,1.613,29,4.007,30,1.29,31,1.29,32,1.545,33,1.545,34,1.29,35,2.486,36,1.545,37,2.454,38,2.454,39,2.454,40,3.234,41,2.448,42,3.234,43,3.234,44,2.158,45,1.545,46,1.545,47,2.94,48,2.379,49,2.94,50,2.94,51,2.94,52,2.94,53,2.94,54,2.454,55,2.454,56,2.454,57,2.94,58,2.94,59,2.94,60,2.94,61,2.94,62,2.94]],["title/injectables/AppService.html",[18,1.674,63,0.921]],["body/injectables/AppService.html",[3,0.408,4,0.353,5,0.353,7,0.652,8,1.78,9,4.93,11,0.031,12,0.95,14,1.444,15,1.934,16,0.525,17,0.869,18,2.744,20,0.408,21,0.02,24,1.569,26,0.026,27,0.026,63,1.509,64,2.03,65,3.536,66,4.236,67,4.236,68,4.236]],["title/controllers/AuthController.html",[0,1.283,69,2.053]],["body/controllers/AuthController.html",[0,0.778,2,0.778,3,0.186,4,0.161,5,0.377,7,0.298,8,1.026,10,1.681,11,0.032,12,0.935,14,1.423,15,0.716,16,0.641,17,0.396,20,0.186,21,0.009,22,1.12,24,1.545,26,0.015,27,0.015,69,1.939,70,1.612,71,1.402,72,1.932,73,2.466,74,2.682,75,2.511,76,3.482,77,2.511,78,1.932,79,3.695,80,1.932,81,1.932,82,1.932,83,1.932,84,1.681,85,1.545,86,0.928,87,1.545,88,3.997,89,2,90,1.612,91,2.418,92,3.009,93,1.932,94,2.376,95,1.932,96,1.932,97,1.932,98,1.612,99,2.418,100,3.009,101,1.932,102,1.402,103,1.402,104,3.009,105,1.612,106,3.009,107,1.942,108,1.612,109,1.612,110,1.612,111,1.12,112,1.932,113,1.932,114,1.612,115,1.612,116,3.009,117,1.932,118,1.932,119,3.009,120,1.932,121,1.402,122,1.015,123,1.932,124,1.932,125,1.932,126,1.932,127,2,128,1.932,129,1.932,130,1.932,131,1.932,132,3.009,133,2.511,134,1.932,135,1.932,136,3.079,137,3.695,138,3.009,139,1.932,140,1.932,141,1.932,142,1.612,143,0.778,144,1.932,145,1.932,146,1.932,147,1.932,148,1.932,149,1.932,150,3.695,151,1.932,152,3.009,153,1.932,154,1.932,155,3.009,156,3.009,157,1.932,158,1.932,159,3.009,160,1.932,161,1.932,162,3.009,163,1.932,164,1.932,165,2.511,166,1.932]],["title/classes/AuthGuard.html",[21,0.015,111,1.846]],["body/classes/AuthGuard.html",[3,0.336,4,0.291,5,0.291,7,0.538,8,1.573,11,0.032,12,1.034,14,1.573,16,0.572,17,0.716,20,0.336,21,0.017,24,1.709,26,0.023,27,0.023,84,1.858,85,1.709,86,0.716,87,1.709,111,2.995,167,1.406,168,2.914,169,2.973,170,4.613,171,4.613,172,4.613,173,4.613,174,5.497,175,3.49,176,3.49,177,4.613,178,4.149,179,3.49,180,5.167,181,4.613,182,3.49,183,2.25,184,3.49,185,2.914,186,2.534]],["title/modules/AuthModule.html",[28,1.086,40,1.846]],["body/modules/AuthModule.html",[2,1.696,3,0.294,4,0.254,5,0.254,11,0.032,16,0.73,17,0.625,20,0.294,21,0.015,26,0.021,27,0.021,28,1.644,30,1.337,31,1.337,32,1.602,33,1.602,34,1.337,35,2.534,36,1.602,40,3.51,41,2.476,44,2.212,45,1.602,46,1.602,48,2.44,69,3.108,107,2.966,108,2.544,178,2.212,183,1.964,187,2.544,188,2.544,189,3.047,190,3.271,191,3.047,192,3.047,193,2.212,194,3.047,195,3.047,196,2.212,197,1.767,198,2.212,199,3.047,200,3.047,201,3.047,202,2.212,203,3.047,204,3.047,205,2.544,206,3.047,207,2.212,208,2.212,209,3.047,210,2.544,211,2.544]],["title/injectables/AuthService.html",[63,0.921,107,1.674]],["body/injectables/AuthService.html",[3,0.15,4,0.13,5,0.13,7,0.239,8,0.863,11,0.033,12,0.976,14,1.564,16,0.568,17,0.319,20,0.15,21,0.007,24,1.504,26,0.012,27,0.012,63,0.731,64,0.745,73,2.329,74,3.471,75,3.388,76,2.67,77,3.078,84,1.753,85,1.771,86,0.893,87,1.612,89,1.767,90,2.111,91,2.137,94,2.599,98,2.111,99,2.137,107,1.329,109,1.297,110,1.297,127,2.292,136,2.772,165,2.111,178,3.158,185,3.388,186,2.946,196,1.128,197,0.9,198,1.128,207,1.128,208,1.128,210,1.297,211,1.297,212,1.297,213,2.529,214,1.63,215,1.128,216,1.618,217,4.587,218,1.553,219,1.836,220,2.529,221,1.553,222,1.297,223,1.553,224,2.529,225,2.086,226,1.553,227,4.059,228,1.553,229,2.529,230,1.553,231,2.529,232,1.297,233,1.128,234,1.553,235,1.553,236,1.297,237,2.111,238,1.836,239,4.059,240,3.199,241,1.938,242,2.529,243,3.199,244,1.553,245,1.553,246,1.553,247,1.553,248,1.553,249,1.553,250,3.199,251,1.553,252,2.676,253,3.078,254,2.676,255,1.128,256,1.836,257,2.111,258,2.529,259,1.553,260,1.553,261,3.199,262,1.553,263,1.553,264,1.553,265,1.553,266,1.553,267,1.553,268,1.553,269,1.553,270,1.553,271,1.553,272,1.938,273,1.297,274,3.388,275,1.001,276,2.529,277,2.529,278,1.553,279,1.553,280,1.128,281,1.553,282,1.297,283,1.553]],["title/classes/CreateSchoolDto.html",[21,0.015,284,1.674]],["body/classes/CreateSchoolDto.html",[3,0.324,4,0.28,5,0.28,7,0.518,10,2.182,11,0.031,12,1.214,15,2.234,16,0.417,20,0.324,21,0.022,26,0.022,27,0.022,86,1.111,87,2.152,143,1.813,167,1.354,241,2.666,284,2.365,285,4.712,286,2.44,287,5.071,288,5.071,289,5.071,290,4.499,291,3.362,292,3.362,293,3.362,294,3.362,295,2.806,296,3.362,297,3.266,298,2.9,299,3.931,300,3.272,301,1.767]],["title/classes/CreateTaskDto.html",[21,0.015,302,1.846]],["body/classes/CreateTaskDto.html",[3,0.355,4,0.308,5,0.308,7,0.568,10,2.138,11,0.031,12,1.19,15,2.08,16,0.457,20,0.355,21,0.023,26,0.024,27,0.024,86,1.089,143,1.927,167,1.486,225,2.292,295,3.992,298,3.421,299,3.852,300,3.076,301,1.938,302,2.772,303,4.687,304,2.677,305,3.852,306,3.421,307,3.421,308,3.078,309,3.078,310,3.078]],["title/injectables/JwtStrategy.html",[63,0.921,190,1.846]],["body/injectables/JwtStrategy.html",[3,0.328,4,0.284,5,0.284,7,0.524,8,1.546,11,0.032,12,1.016,14,1.159,16,0.674,17,0.698,20,0.328,21,0.016,24,1.259,26,0.022,27,0.022,63,1.311,64,1.629,73,2.238,84,1.369,85,1.259,86,0.698,87,1.259,89,1.629,169,2.922,183,2.191,190,2.628,197,1.971,198,2.468,202,3.702,205,2.838,208,2.468,214,3.287,222,2.838,241,1.787,272,1.787,311,2.838,312,4.533,313,5.1,314,3.399,315,3.399,316,3.399,317,3.399,318,3.399,319,3.399,320,2.838,321,3.399,322,3.399,323,3.399,324,3.399,325,3.399,326,3.399,327,3.399,328,3.399,329,2.838,330,3.399]],["title/classes/LoginDto.html",[21,0.015,91,1.846]],["body/classes/LoginDto.html",[3,0.364,4,0.315,5,0.315,7,0.582,10,1.957,11,0.031,12,1.09,15,2.1,16,0.602,20,0.364,21,0.023,26,0.024,27,0.024,86,0.997,91,2.816,122,1.987,143,1.957,167,1.523,241,2.822,297,3.527,298,3.461,300,2.816,301,1.987,331,3.155,332,4.482,333,3.78,334,3.78,335,3.78,336,3.78,337,4.482,338,3.155,339,3.155,340,3.155,341,3.155]],["title/modules/PrismaModule.html",[28,1.086,41,1.398]],["body/modules/PrismaModule.html",[3,0.355,4,0.308,5,0.308,11,0.031,16,0.593,17,0.757,20,0.355,21,0.018,26,0.024,27,0.024,28,1.81,30,1.618,31,1.618,32,1.938,33,1.938,34,1.618,35,2.79,36,2.79,41,2.788,44,2.514,45,1.938,46,1.938,48,2.772,216,2.788,342,3.078,343,3.078,344,3.078,345,3.688,346,3.688,347,3.688]],["title/injectables/PrismaService.html",[63,0.921,216,1.398]],["body/injectables/PrismaService.html",[3,0.34,4,0.295,5,0.295,7,0.544,8,1.585,11,0.032,12,1.042,14,1.585,16,0.576,17,0.725,20,0.34,21,0.017,26,0.023,27,0.023,63,1.344,64,1.692,73,2.636,84,1.422,85,1.308,86,0.725,87,1.308,127,2.228,169,2.996,216,2.04,348,2.947,349,5.196,350,4.648,351,5.891,352,4.648,353,5.522,354,3.531,355,2.947,356,3.531,357,2.947,358,3.531,359,3.531,360,3.531,361,3.531]],["title/classes/RegisterDto.html",[21,0.015,99,1.846]],["body/classes/RegisterDto.html",[3,0.342,4,0.296,5,0.296,7,0.546,10,2.097,11,0.032,12,1.167,15,2.185,16,0.577,20,0.342,21,0.022,26,0.023,27,0.023,85,1.929,86,1.068,99,2.701,122,1.863,143,1.877,167,1.428,241,2.737,297,3.383,298,3.565,300,3.206,301,1.863,332,4.346,337,4.616,338,2.959,339,2.959,340,2.959,341,2.959,362,2.959,363,3.545,364,3.545,365,3.545,366,3.545,367,3.545,368,3.545]],["title/classes/School.html",[21,0.015,369,1.846]],["body/classes/School.html",[3,0.462,4,0.4,5,0.4,11,0.029,20,0.462,21,0.023,26,0.028,27,0.028,167,1.93,369,3.259,370,4]],["title/controllers/SchoolController.html",[0,1.283,371,2.053]],["body/controllers/SchoolController.html",[0,0.951,2,0.951,3,0.228,4,0.197,5,0.197,7,0.364,8,1.196,10,1.991,11,0.032,12,1.108,14,1.686,15,2.084,16,0.612,17,0.485,20,0.228,21,0.011,22,1.369,23,1.971,24,1.831,26,0.017,27,0.017,71,1.714,73,2.652,84,1.864,85,1.714,86,0.949,87,1.714,89,2.369,102,2.545,103,3.035,121,1.714,122,1.241,127,2.369,238,1.714,272,2.722,280,2.545,284,2.722,369,1.369,371,2.26,372,1.971,373,2.545,374,3.862,375,2.926,376,2.926,377,1.971,378,2.361,379,2.361,380,1.971,381,3.506,382,2.361,383,1.971,384,3.506,385,2.361,386,1.971,387,3.192,388,3.506,389,2.361,390,1.971,391,1.971,392,2.197,393,1.971,394,1.522,395,2.545,396,1.522,397,2.361,398,2.361,399,2.361,400,2.361,401,2.361,402,2.361,403,2.361,404,2.361,405,2.361,406,2.361,407,2.361]],["title/modules/SchoolModule.html",[28,1.086,42,1.846]],["body/modules/SchoolModule.html",[2,1.902,3,0.348,4,0.302,5,0.302,11,0.032,16,0.69,17,0.742,20,0.348,21,0.017,26,0.023,27,0.023,28,1.793,30,1.586,31,1.586,32,1.9,33,1.9,34,1.586,35,2.763,36,1.9,41,2.602,42,3.551,44,2.481,45,1.9,46,1.9,48,2.736,193,2.624,371,3.388,392,3.117,393,3.017,408,3.017,409,3.615,410,3.017,411,3.615,412,3.615]],["title/injectables/SchoolService.html",[63,0.921,392,1.674]],["body/injectables/SchoolService.html",[3,0.193,4,0.167,5,0.167,7,0.308,8,1.054,11,0.032,12,1.089,14,1.567,16,0.527,17,0.41,20,0.193,21,0.01,22,1.159,24,1.799,26,0.015,27,0.015,63,0.894,64,0.958,73,2.572,84,1.851,85,1.702,86,0.943,87,1.702,89,2.202,94,2.661,127,2.202,136,2.663,214,1.289,215,1.451,216,1.865,219,2.243,225,2.573,232,1.669,233,1.451,252,3.525,253,3.835,254,2.742,255,1.451,256,1.451,257,1.669,272,2.882,280,2.243,282,1.669,284,2.553,369,2.463,373,2.243,374,3.547,375,2.579,376,2.579,377,2.579,380,2.579,383,2.579,386,2.579,387,3.032,392,1.624,394,1.289,395,2.243,396,1.289,413,1.669,414,1.999,415,1.999,416,1.999,417,1.999,418,1.999,419,1.999,420,3.777,421,1.999,422,4.594,423,1.999,424,1.999,425,1.669,426,3.777,427,1.999,428,3.777,429,1.999,430,1.669]],["title/interfaces/Task.html",[431,2.053,432,1.846]],["body/interfaces/Task.html",[3,0.339,4,0.293,5,0.293,7,0.542,11,0.032,15,2.18,20,0.447,26,0.023,27,0.023,86,1.064,136,2.039,143,1.868,225,2.486,275,2.267,306,3.868,307,3.868,431,2.267,432,3.411,433,3.517,434,2.553,435,3.868,436,3.765,437,3.343,438,4.329,439,4.329]],["title/controllers/TaskController.html",[0,1.283,440,2.053]],["body/controllers/TaskController.html",[0,0.669,2,0.669,3,0.16,4,0.139,5,0.139,7,0.256,8,0.91,10,1.692,11,0.032,12,0.942,14,1.433,16,0.556,17,0.341,20,0.16,21,0.008,22,0.963,24,1.556,26,0.013,27,0.013,71,1.206,73,2.474,84,1.545,85,1.42,86,0.787,87,1.42,89,2.013,94,2.73,102,4.043,103,2.43,105,1.386,111,0.963,121,1.206,122,0.873,127,2.013,133,3.506,225,2.426,238,3.559,272,0.873,302,2.223,390,2.229,391,2.229,394,1.071,396,1.071,432,0.963,435,2.892,440,1.721,441,1.386,442,2.229,443,2.229,444,3.201,445,2.229,446,2.229,447,1.661,448,1.661,449,1.661,450,1.386,451,1.661,452,1.661,453,1.661,454,1.661,455,1.386,456,1.661,457,1.661,458,1.386,459,2.223,460,1.661,461,1.661,462,1.76,463,1.386,464,2.229,465,1.661,466,1.661,467,1.661,468,5.569,469,4.201,470,4.201,471,4.201,472,2.67,473,4.201,474,3.834,475,5.569,476,4.201,477,4.487,478,4.201,479,2.229,480,3.834,481,3.834,482,4.201,483,2.67,484,1.661,485,1.661,486,1.661,487,1.661,488,1.661,489,1.386,490,1.661,491,1.661,492,1.661,493,2.67,494,3.348,495,3.348,496,3.348,497,1.661,498,1.661,499,1.661,500,2.67,501,1.661,502,1.661,503,1.661,504,1.661,505,2.67,506,1.661,507,1.661,508,1.661]],["title/modules/TaskModule.html",[28,1.086,43,1.846]],["body/modules/TaskModule.html",[2,1.902,3,0.348,4,0.302,5,0.302,11,0.032,16,0.69,17,0.742,20,0.348,21,0.017,26,0.023,27,0.023,28,1.793,30,1.586,31,1.586,32,1.9,33,1.9,34,1.586,35,2.763,36,1.9,41,2.602,43,3.551,44,2.481,45,1.9,46,1.9,48,2.736,193,2.624,440,3.388,462,3.117,463,3.017,509,3.017,510,3.017,511,3.615,512,3.615,513,3.615]],["title/injectables/TaskService.html",[63,0.921,462,1.674]],["body/injectables/TaskService.html",[3,0.181,4,0.156,5,0.156,7,0.289,8,1.003,11,0.032,12,1.061,14,1.521,16,0.553,17,0.385,20,0.181,21,0.009,24,1.753,26,0.015,27,0.015,63,0.85,64,0.899,73,2.54,74,1.362,84,1.796,85,1.753,86,0.915,87,1.652,88,3.028,89,2.137,94,3.071,127,2.137,136,2.585,214,1.896,215,1.362,216,1.802,219,2.135,225,2.524,233,1.362,237,2.455,241,0.986,252,3.434,254,2.135,255,1.362,256,1.362,272,2.344,273,1.566,274,3.427,302,2.38,305,2.135,394,1.209,396,1.209,425,1.566,430,1.566,435,3.049,442,2.455,443,2.455,444,3.427,445,2.455,446,2.455,450,2.455,455,2.455,458,2.455,459,2.38,462,1.546,464,2.455,479,1.566,514,1.566,515,1.876,516,2.941,517,1.876,518,1.876,519,1.876,520,1.876,521,1.876,522,1.876,523,1.566,524,1.876,525,2.941,526,4.106,527,2.941,528,1.876,529,4.459,530,4.459,531,1.876,532,1.876,533,1.876,534,1.876,535,1.876,536,2.941,537,1.876,538,2.941,539,1.876]],["title/classes/UpdateSchoolDto.html",[21,0.015,387,1.846]],["body/classes/UpdateSchoolDto.html",[3,0.424,4,0.367,5,0.367,11,0.031,16,0.662,20,0.424,21,0.021,26,0.026,27,0.026,167,1.772,169,3.443,284,2.312,286,3.193,373,3.193,387,3.097,395,3.193,540,3.672,541,5.342,542,4.399,543,3.672,544,3.672]],["title/classes/UpdateTaskDto.html",[21,0.015,459,1.846]],["body/classes/UpdateTaskDto.html",[3,0.32,4,0.277,5,0.277,7,0.512,10,2.032,11,0.031,12,1.131,15,2.146,16,0.412,20,0.32,21,0.021,26,0.022,27,0.022,86,1.035,94,2.348,143,1.799,167,1.339,225,2.141,299,4.083,300,3.26,301,1.748,304,2.414,305,3.661,306,3.251,307,3.251,308,2.776,309,2.776,310,2.776,459,2.589,489,3.728,545,4.501,546,4.466,547,4.466,548,5.392,549,5.392,550,4.466,551,4.466,552,4.466,553,4.466,554,4.466]],["title/coverage.html",[555,3.149]],["body/coverage.html",[0,2.02,1,1.807,5,0.234,6,2.341,11,0.032,18,1.474,21,0.028,26,0.02,27,0.02,34,1.23,63,1.589,65,2.341,69,1.807,70,2.341,86,0.575,91,1.625,99,1.625,107,1.474,111,1.625,168,2.341,186,2.035,190,1.625,197,1.625,212,2.341,216,1.23,275,1.807,284,1.474,285,2.341,286,2.882,302,1.625,303,2.341,304,2.882,311,2.341,331,2.341,348,2.341,362,2.341,369,1.625,370,2.341,371,1.807,372,2.341,387,1.625,392,1.474,413,2.341,431,1.807,432,1.625,434,2.882,440,1.807,441,2.341,459,1.625,462,1.474,514,2.341,540,2.341,545,2.341,555,2.035,556,2.804,557,2.804,558,2.804,559,6.368,560,3.971,561,3.971,562,5.014,563,2.804,564,2.804,565,5.014,566,2.341,567,3.971,568,5.292,569,2.341,570,2.804,571,3.971,572,3.971,573,2.804,574,2.804]],["title/dependencies.html",[31,1.68,575,2.224]],["body/dependencies.html",[11,0.032,17,0.782,21,0.023,26,0.024,27,0.024,31,1.672,54,3.181,55,3.181,114,3.181,115,3.181,122,2.003,183,2.457,196,2.766,202,2.766,236,3.181,301,2.003,320,4.077,357,3.181,523,3.181,543,3.181,544,3.181,576,5.391,577,3.811,578,3.811,579,3.811,580,3.811,581,3.811,582,3.811,583,3.811,584,3.811,585,3.811,586,3.811,587,3.811,588,3.811,589,3.811,590,3.811,591,3.811,592,3.811,593,3.811,594,3.811]],["title/miscellaneous/functions.html",[595,1.717,596,3.196]],["body/miscellaneous/functions.html",[7,0.746,11,0.028,26,0.028,27,0.028,34,2.63,569,4.042,595,3.121,596,4.042,597,4.842]],["title/index.html",[7,0.41,598,2.665,599,2.665]],["body/index.html",[4,0.276,11,0.031,26,0.022,27,0.022,56,2.766,355,2.766,437,2.136,555,2.405,600,3.313,601,3.313,602,4.455,603,3.313,604,3.313,605,3.313,606,3.313,607,3.313,608,3.313,609,5.034,610,3.313,611,3.313,612,3.313,613,3.313,614,5.034,615,5.911,616,3.313,617,3.313,618,5.785,619,3.313,620,3.313,621,4.455,622,3.313,623,3.313,624,3.313,625,3.313,626,4.455,627,4.455,628,3.313,629,3.313,630,3.313,631,4.455,632,4.455,633,3.313,634,3.313,635,3.313,636,3.313,637,3.313,638,2.766,639,3.313,640,3.313,641,3.313,642,3.313,643,3.313,644,3.313,645,3.313,646,3.313,647,3.313,648,2.766,649,3.313,650,3.313,651,3.313,652,3.313,653,3.313,654,3.313,655,2.766]],["title/modules.html",[30,1.904]],["body/modules.html",[11,0.026,26,0.026,27,0.026,29,2.849,30,1.94,40,2.562,41,1.94,42,2.562,43,2.562,638,5.125,656,6.139,657,6.139,658,6.139]],["title/overview.html",[659,3.622]],["body/overview.html",[2,1.232,11,0.031,18,2.539,26,0.021,27,0.021,28,1.043,29,3.978,30,1.342,31,1.342,32,1.607,33,1.607,34,1.342,35,1.607,36,1.607,37,2.552,38,2.552,39,2.552,40,3.47,41,2.708,42,3.355,43,3.355,44,2.217,45,1.607,46,1.607,64,1.466,107,2.539,167,1.232,187,2.552,188,2.552,190,2.8,216,2.54,342,2.552,343,2.552,344,2.552,392,2.539,408,2.552,410,2.552,431,1.971,436,2.22,462,2.539,509,2.552,510,2.552,659,2.552,660,3.058,661,3.058,662,3.058,663,3.058]],["title/properties.html",[143,1.542,575,2.224]],["body/properties.html",[11,0.031,26,0.028,27,0.028,143,1.92,437,3.072,648,3.979,655,3.979,664,4.767,665,4.767,666,4.767]],["title/miscellaneous/variables.html",[595,1.717,667,3.196]],["body/miscellaneous/variables.html",[7,0.582,11,0.032,26,0.024,27,0.024,86,0.997,142,3.155,197,2.816,207,2.743,275,3.132,306,3.461,307,3.461,329,3.155,432,3.285,434,2.743,435,3.461,436,3.898,437,3.461,438,4.482,439,4.482,566,3.155,595,2.436,667,3.155,668,3.78,669,3.78,670,4.859,671,4.859,672,3.78,673,3.78]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":665,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":436,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":438,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["2/7",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":529,"title":{},"body":{"injectables/TaskService.html":{}}}],["28",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":439,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["3.0.4",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":661,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":535,"title":{},"body":{"injectables/TaskService.html":{}}}],["5",{"_index":660,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":662,"title":{},"body":{"overview.html":{}}}],["7.3.1",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":663,"title":{},"body":{"overview.html":{}}}],["abcdefghij",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":287,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["akan",{"_index":476,"title":{},"body":{"controllers/TaskController.html":{}}}],["already",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":639,"title":{},"body":{"index.html":{}}}],["anda",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{}}}],["apibearerauth",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@get('/profile",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":337,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":333,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(8)@maxlength(16",{"_index":335,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":365,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isemail",{"_index":363,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(8)@maxlength(16",{"_index":367,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apitags",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["apitags('auth",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('school",{"_index":397,"title":{},"body":{"controllers/SchoolController.html":{}}}],["apitags('task",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{}}}],["app",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":608,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["atau",{"_index":553,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["auth",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/login",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/register",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":69,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":111,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":648,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":107,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatar(@req",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":640,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berfungsi",{"_index":548,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["binary",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":658,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":656,"title":{},"body":{"modules.html":{}}}],["building",{"_index":603,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":171,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":173,"title":{},"body":{"classes/AuthGuard.html":{}}}],["catatan",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{}}}],["cb",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.email",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.id",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.name",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.password",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":167,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":342,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":343,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_imports",{"_index":345,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_prismamodule_providers",{"_index":344,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":408,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":409,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":410,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":509,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":511,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":510,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":176,"title":{},"body":{"classes/AuthGuard.html":{}}}],["contoh",{"_index":482,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('school",{"_index":398,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":467,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":555,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":373,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":399,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":377,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["created",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["createdata",{"_index":527,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschool",{"_index":420,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":284,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":442,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":485,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":447,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":516,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":302,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["dan",{"_index":501,"title":{},"body":{"controllers/TaskController.html":{}}}],["dapat",{"_index":551,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["dari",{"_index":478,"title":{},"body":{"controllers/TaskController.html":{}}}],["data",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["data')@apibody({schema",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.email",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":525,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataschool",{"_index":422,"title":{},"body":{"injectables/SchoolService.html":{}}}],["datatask",{"_index":530,"title":{},"body":{"injectables/TaskService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorator",{"_index":475,"title":{},"body":{"controllers/TaskController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["delete('/:task_id",{"_index":506,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":384,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleted",{"_index":430,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["deletedata",{"_index":538,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteschool",{"_index":428,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deletetaskbyid",{"_index":443,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":507,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":450,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":437,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":617,"title":{},"body":{"index.html":{}}}],["digunakan",{"_index":480,"title":{},"body":{"controllers/TaskController.html":{}}}],["diisi",{"_index":552,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["diperlukan",{"_index":474,"title":{},"body":{"controllers/TaskController.html":{}}}],["diskstorage",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["documentation",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":394,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":628,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":604,"title":{},"body":{"index.html":{}}}],["email",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":180,"title":{},"body":{"classes/AuthGuard.html":{}}}],["error",{"_index":425,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["example",{"_index":614,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":174,"title":{},"body":{"classes/AuthGuard.html":{}}}],["exists",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":169,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extension",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["extractjwt",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["false",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":374,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":375,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":402,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":380,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["format",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["framework",{"_index":602,"title":{},"body":{"index.html":{}}}],["function",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":596,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":497,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('/profile",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":381,"title":{},"body":{"controllers/SchoolController.html":{}}}],["getalltask",{"_index":444,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettaskbyid",{"_index":445,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":498,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":455,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":598,"title":{"index.html":{}},"body":{}}],["grow",{"_index":635,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":172,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":177,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":645,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/task",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{}}}],["http://localhost:3000/task/1",{"_index":496,"title":{},"body":{"controllers/TaskController.html":{}}}],["httpexception",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('password",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":652,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.bad_request",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.ok",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.unauthorized",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":305,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":358,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":532,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["ingin",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{}}}],["inject",{"_index":522,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":524,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":63,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":613,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":616,"title":{},"body":{"index.html":{}}}],["interface",{"_index":431,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":433,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":297,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":298,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isoption",{"_index":547,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isoptional",{"_index":299,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":546,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":300,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":295,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{}}}],["isstring()@isoptional",{"_index":290,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":292,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["jika",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{}}}],["join",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":190,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":649,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":655,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":632,"title":{},"body":{"index.html":{}}}],["login",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":91,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["maka",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{}}}],["match",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(7",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["maxlength",{"_index":338,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(16",{"_index":341,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["membuat",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["mencari",{"_index":492,"title":{},"body":{"controllers/TaskController.html":{}}}],["mendapatkan",{"_index":487,"title":{},"body":{"controllers/TaskController.html":{}}}],["mengambil",{"_index":477,"title":{},"body":{"controllers/TaskController.html":{}}}],["menghapus",{"_index":505,"title":{},"body":{"controllers/TaskController.html":{}}}],["mengupdate",{"_index":500,"title":{},"body":{"controllers/TaskController.html":{}}}],["message",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":339,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(8",{"_index":340,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":595,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":631,"title":{},"body":{"index.html":{}}}],["mode",{"_index":621,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":644,"title":{},"body":{"index.html":{}}}],["multer",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":650,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["namefolder",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["nest",{"_index":609,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":654,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":523,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":543,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":183,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"dependencies.html":{}}}],["new",{"_index":186,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["node.js",{"_index":601,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":550,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["number",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":633,"title":{},"body":{"index.html":{}}}],["optional",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["originalname",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["originalname.lastindexof",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["originalname.substring",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":659,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":575,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameter",{"_index":494,"title":{},"body":{"controllers/TaskController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":542,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":541,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportauthguard",{"_index":182,"title":{},"body":{"classes/AuthGuard.html":{}}}],["passportauthguard('jwt",{"_index":170,"title":{},"body":{"classes/AuthGuard.html":{}}}],["passportmodule",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":332,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":502,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload:any",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perlu",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{}}}],["phone",{"_index":288,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":642,"title":{},"body":{"index.html":{}}}],["post",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('/avatar",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":347,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":357,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":41,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":216,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["process.on('beforeexit",{"_index":360,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":623,"title":{},"body":{"index.html":{}}}],["profile",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":600,"title":{},"body":{"index.html":{}}}],["project",{"_index":634,"title":{},"body":{"index.html":{}}}],["properties",{"_index":143,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["randomname",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":643,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":99,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["remove",{"_index":376,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":406,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":383,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":612,"title":{},"body":{"index.html":{}}}],["req",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["req.user.id",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":618,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":605,"title":{},"body":{"index.html":{}}}],["schema",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["school",{"_index":369,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["school.controller",{"_index":412,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":286,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:12",{"_index":293,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:16",{"_index":291,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:20",{"_index":294,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:7",{"_index":296,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":289,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":371,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":42,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":392,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["sebagai",{"_index":549,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["sebuah",{"_index":493,"title":{},"body":{"controllers/TaskController.html":{}}}],["secret",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["semua",{"_index":488,"title":{},"body":{"controllers/TaskController.html":{}}}],["server",{"_index":606,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":607,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["sponsors",{"_index":637,"title":{},"body":{"index.html":{}}}],["src/.../config_jwt.ts",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.ts",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:78",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":168,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:10",{"_index":179,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:6",{"_index":175,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:106",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:137",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:51",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":331,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:16",{"_index":336,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:9",{"_index":334,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":362,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":364,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:22",{"_index":368,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:9",{"_index":366,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt.ts",{"_index":566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":346,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":356,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":285,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":540,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":370,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":372,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:13",{"_index":378,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:18",{"_index":379,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:23",{"_index":382,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:28",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:33",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":411,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":413,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:10",{"_index":415,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:25",{"_index":416,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:34",{"_index":417,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:54",{"_index":419,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":414,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:71",{"_index":418,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/task.ts",{"_index":434,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":303,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":545,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":441,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:22",{"_index":449,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:31",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:40",{"_index":457,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:51",{"_index":461,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:61",{"_index":452,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":512,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":514,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:14",{"_index":517,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:27",{"_index":519,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:49",{"_index":520,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:70",{"_index":521,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:8",{"_index":515,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:85",{"_index":518,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":619,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":622,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":624,"title":{},"body":{"index.html":{}}}],["started",{"_index":599,"title":{"index.html":{}},"body":{}}],["starter",{"_index":611,"title":{},"body":{"index.html":{}}}],["statements",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":646,"title":{},"body":{"index.html":{}}}],["storage",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":184,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":638,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":657,"title":{},"body":{"modules.html":{}}}],["table",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":432,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":513,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":304,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:10",{"_index":310,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:14",{"_index":309,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:6",{"_index":308,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.service",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":306,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":435,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":307,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":440,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":43,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":462,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":627,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":630,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":629,"title":{},"body":{"index.html":{}}}],["tests",{"_index":626,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":636,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":359,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(userid",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.schools.create",{"_index":421,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":429,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":424,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":423,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":427,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":528,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":539,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":534,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":531,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":537,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findunique",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":526,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":400,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":401,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":403,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":407,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":405,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":486,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+task_id",{"_index":508,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":499,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+task_id",{"_index":504,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":185,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["tidak",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["tipe",{"_index":554,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["touch",{"_index":647,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":653,"title":{},"body":{"index.html":{}}}],["type",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":544,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["types/mime",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":610,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":181,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined})@useinterceptors(undefined)@post('/avatar",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":625,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":666,"title":{},"body":{"properties.html":{}}}],["untuk",{"_index":481,"title":{},"body":{"controllers/TaskController.html":{}}}],["update",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["update(@param('id",{"_index":404,"title":{},"body":{"controllers/SchoolController.html":{}}}],["update(id",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["updated",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["updatedata",{"_index":536,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateschool",{"_index":426,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":387,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetaskbyid",{"_index":446,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":503,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":459,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["uploadavatar",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["url",{"_index":495,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":451,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":456,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@patch('/:task_id",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post",{"_index":448,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(validationpipe",{"_index":484,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":178,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["users",{"_index":533,"title":{},"body":{"injectables/TaskService.html":{}}}],["validate",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":301,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":667,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":664,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":620,"title":{},"body":{"index.html":{}}}],["website",{"_index":651,"title":{},"body":{"index.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":615,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":641,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    TaskModule, PrismaModule, AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('/avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('/profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  // /auth/register\n  @Post('/register')\n  async register(@Body() data: RegisterDto) {\n    return await this.authService.register(data);\n  }\n\n  // /auth/login\n  @Post('/login')\n  async login(@Body() data: LoginDto) {\n    return await this.authService.login(data);\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @Get('/profile')\n  async profile(@Req() req) {\n    const userId = req.user.id;\n    const profile = await this.authService.profile(userId);\n\n    return profile;\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        avatar: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          const randomName = Math.random().toString(36).substring(7);\n          const originalName = file.originalname;\n          const extension = originalName.substring(\n            originalName.lastIndexOf('.'),\n          );\n          const fileName = randomName + extension;\n          cb(null, fileName);\n          // cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Post('/avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    const userId = req.user.id;\n    const nameFolder = '/uploads/image/' + file.filename;\n    const uploadAvatar = await this.authService.uploadAvatar(\n      userId,\n      nameFolder,\n    );\n\n    return uploadAvatar;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportAuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\n\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    })\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Login User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Register\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  /**\n   * Register\n   * @param data\n   * @returns\n   */\n  async register(data: RegisterDto) {\n    const checkUser = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (checkUser) {\n      throw new HttpException('User already exists', HttpStatus.FOUND);\n    }\n\n    data.password = await hash(data.password, 12);\n    const createUser = await this.prisma.users.create({\n      data,\n    });\n\n    if (createUser) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'User has been created',\n        data: createUser,\n      };\n    }\n  }\n\n  /**\n   * Login User\n   * @param data\n   * @returns\n   */\n  async login(data: LoginDto) {\n    const checkUser = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (!checkUser) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(data.password, checkUser.password);\n\n    if (checkPassword) {\n      const accessToken = this.generateJWT({\n        sub: checkUser.id,\n        email: checkUser.email,\n        name: checkUser.name,\n      });\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Login success',\n        data: checkUser,\n        accessToken: accessToken,\n      };\n    } else {\n      throw new HttpException('Password not match', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async profile(user_id: number) {\n    const user = await this.prisma.users.findUnique({\n      where: {\n        id: user_id,\n      },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        avatar: true,\n        tasks: true,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'Profile',\n      data: user,\n    };\n  }\n\n  async uploadAvatar(user_id: number, avatar) {\n    const checkuserExists = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n    });\n\n    if (checkuserExists) {\n      const updateAvatar = await this.prisma.users.update({\n        data: {\n          avatar: avatar,\n        },\n        where: {\n          id: user_id,\n        },\n      });\n\n      if (!updateAvatar) {\n        throw new HttpException(\n          'Failed to update avatar',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Avatar has been updated',\n      };\n    }\n  }\n\n  generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateSchoolDto {\n\n    @IsString()\n    @IsNotEmpty()\n    school_name: string;\n\n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string;\n\n    @IsString()\n    @IsOptional()\n    address?: string;\n\n    @IsString()\n    @IsOptional()\n    phone?: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateTaskDto {\n\n    @IsOptional()\n    id_user: number;\n\n    @IsString()\n    @IsNotEmpty()\n    task_name: string;\n\n    @IsString()\n    @IsNotEmpty()\n    task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwt_config } from \"src/config/config_jwt\";\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt_config.secret,\n        });\n    }\n\n    async validate (payload:any) {\n        return {\n            id: payload.sub,\n            email: payload.email,\n            expired: payload.exp\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(8)@MaxLength(16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class LoginDto {\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(8)\n    @MaxLength(16)\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaModule->PrismaModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaClient } from '@prisma/client';\nimport { INestApplication, Injectable, OnModuleInit } from \"@nestjs/common\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication) {\n        process.on('beforeExit', async () => {\n            await app.close();\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(8)@MaxLength(16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength,  } from \"class-validator\";\n\nexport class RegisterDto {\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    @MaxLength(16)\n    password: string;\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('School')\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService) {}\n\n  async create(createSchoolDto: CreateSchoolDto) {\n    const createSchool = await this.prisma.schools.create({\n      data: createSchoolDto,\n    });\n\n    if (createSchool) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'School has been created',\n        data: createSchool,\n      };\n    }\n\n  }\n\n  async findAll() {\n    const dataSchool = await this.prisma.schools.findMany();\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: dataSchool,\n    };\n  }\n\n  async findOne(id: number) {\n    const dataSchool = await this.prisma.schools.findFirst({\n      where: {\n        id: id,\n      },\n    });\n\n    if (!dataSchool) {\n      return {\n        statusCode: HttpStatus.NOT_FOUND,\n        error: 'School ID not found',\n      };\n    }\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: dataSchool,\n    };\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    const updateSchool = await this.prisma.schools.update({\n      where: {\n        id: id,\n      },\n      data: updateSchoolDto,\n    });\n\n    if (updateSchool) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'School has been updated',\n        data: updateSchool,\n      };\n    }\n  }\n\n  async remove(id: number) {\n    const deleteSchool = await this.prisma.schools.delete({\n      where: {\n        id: id,\n      },\n    });\n\n    if (deleteSchool) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'School has been deleted',\n        data: deleteSchool,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n    task_id: number;\n    task_name: string;\n    task_description: string;\n}\n\nexport const tasks : Task[] = [\n    {\n        task_id: 1,\n        task_name: 'Task 1',\n        task_description: 'Description 1'\n    },\n    {\n        task_id: 2,\n        task_name: 'Task 2',\n        task_description: 'Description 2'\n    },\n    {\n        task_id: 3,\n        task_name: 'Task 3',\n        task_description: 'Description 3'\n    }\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id: number, body: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Get, Param, Patch, Delete, UseGuards } from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Task')\n@Controller('task')\nexport class TaskController {\n\n    constructor(private taskService: TaskService) {}\n\n    \n    // Catatan: Jika Anda ingin membuat data, maka diperlukan @Body decorator\n    // Catatan: @Body decorator akan mengambil data dari body request\n    // Catatan: @Post decorator digunakan untuk membuat data\n    // Contoh: http://localhost:3000/task\n    // @UsePipes(ValidationPipe)\n    @UseGuards(AuthGuard)\n    @Post()\n    async createTask(@Body() body: CreateTaskDto){\n        return await this.taskService.createTask(body);\n    }\n    \n    // Catatan: Jika Anda ingin mendapatkan semua data, maka tidak perlu @Param decorator\n    // Catatan: @Get decorator digunakan untuk mengambil data\n    // Contoh: http://localhost:3000/task\n    @UseGuards(AuthGuard)\n    @Get()\n    async getAllTask(){\n        return await this.taskService.getAllTask();\n    }\n\n    // Catatan: Jika Anda ingin mencari sebuah ID, maka diperlukan sebuah @Param decorator\n    // Catatan: @Param decorator akan mengambil parameter dari URL\n    // Contoh: http://localhost:3000/task/1\n    @UseGuards(AuthGuard)\n    @Get('/:task_id')\n    async getTaskById(@Param('task_id') task_id: number){\n        return await this.taskService.getTaskById(+task_id);\n    }\n\n    // Catatan: Jika Anda ingin mengupdate data, maka diperlukan @Body dan @Param decorator\n    // Catatan: @Body decorator akan mengambil data dari body request\n    // Catatan: @Param decorator akan mengambil parameter dari URL\n    // Catatan: @Patch decorator digunakan untuk mengupdate data\n    // Contoh: http://localhost:3000/task/1\n    @UseGuards(AuthGuard)\n    @Patch('/:task_id')\n    async updateTaskById(@Param('task_id') task_id: number, @Body() body: UpdateTaskDto){\n        return await this.taskService.updateTaskById(+task_id, body);\n    }\n\n    // Catatan: Jika Anda ingin menghapus data, maka diperlukan @Param decorator\n    // Catatan: @Param decorator akan mengambil parameter dari URL\n    // Catatan: @Delete decorator digunakan untuk menghapus data\n    // Contoh: http://localhost:3000/task/1\n    @UseGuards(AuthGuard)\n    @Delete('/:task_id')\n    async deleteTaskById(@Param('task_id') task_id: number) {\n        return await this.taskService.deleteTaskById(+task_id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService]\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id: number, data: UpdateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(REQUEST) private req: any,\n  ) {}\n\n  async createTask(data: CreateTaskDto) {\n    data.id_user = this.req.user.id;\n    const createData = await this.prisma.tasks.create({\n      data: data,\n    });\n\n    return {\n      statusCode: 200,\n      message: 'Data has been created',\n      data: createData,\n    };\n  }\n\n  async getAllTask() {\n    const dataTask = await this.prisma.tasks.findMany({\n      where: {\n        id_user: this.req.user.id,\n      },\n      include: {\n        users: {\n          select: {\n            id: true,\n            name: true,\n            avatar: true,\n            email: true,\n          }\n        }\n      },\n    })\n    return {\n      statusCode: 200,\n      data: dataTask,\n    };\n  }\n\n  async getTaskById(task_id: number) {\n    const dataTask = await this.prisma.tasks.findFirst({\n      where: {\n        id: task_id,\n        id_user: this.req.user.id,\n      },\n    });\n\n    if (!dataTask) {\n      return {\n        statusCode: 404,\n        error: 'Data ID not found',\n      };\n    }\n\n    return {\n      statusCode: 200,\n      data: dataTask,\n    };\n  }\n\n  async updateTaskById(task_id: number, data: UpdateTaskDto) {\n    data.id_user = this.req.user.id;\n    const updateData = await this.prisma.tasks.update({\n      where: {\n        id: task_id,\n      },\n      data: data,\n    });\n\n    return {\n      statusCode: 200,\n      data: updateData,\n    };\n  }\n\n  async deleteTaskById(task_id: number) {\n    const deleteData = await this.prisma.tasks.delete({\n      where: {\n        id: task_id,\n      },\n    });\n\n    return {\n      statusCode: 200,\n      message: 'Data has been deleted',\n      data: deleteData,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\";\n\nexport class UpdateTaskDto {\n\n    @IsOptional()\n    id_user: number;\n\n    @IsOptional() //IsOption berfungsi sebagai nullable(), dapat diisi atau tidak\n    @IsString() //IsString berfungsi sebagai tipe data string\n    task_name: string;\n\n    @IsOptional() //IsOption berfungsi sebagai nullable(), dapat diisi atau tidak\n    @IsString() //IsString berfungsi sebagai tipe data string\n    task_description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config_jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @prisma/client : ^5.12.1\n        \n            @types/mime : 3.0.4\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nPrismaModule -->\n\nPrismaModule->PrismaModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../config_jwt.ts)\n                        \n                        \n                            tasks   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config_jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'abcdefghij',\n    expired: 3600\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        task_id: 1,\n        task_name: 'Task 1',\n        task_description: 'Description 1'\n    },\n    {\n        task_id: 2,\n        task_name: 'Task 2',\n        task_description: 'Description 2'\n    },\n    {\n        task_id: 3,\n        task_name: 'Task 3',\n        task_description: 'Description 3'\n    }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
